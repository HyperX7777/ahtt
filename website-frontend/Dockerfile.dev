# Use official Node.js as the base image
FROM node:18-alpine AS base

# Install libc6-compat for compatibility (needed for some npm modules)
RUN apk add --no-cache libc6-compat

# Install pnpm globally
RUN npm install -g pnpm

# Install dependencies only when needed
FROM base AS deps
WORKDIR /app

# Copy package manager files for installation
COPY package.json pnpm-lock.yaml* ./

# Install dependencies using pnpm
RUN pnpm install --frozen-lockfile

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app

# Make sure pnpm is available in this stage
RUN npm install -g pnpm

# Copy dependencies from deps stage
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Build the Next.js app using pnpm
RUN pnpm run build

# Production image, copy the necessary files and run Next.js
FROM base AS runner
WORKDIR /app

ENV NODE_ENV production

# Create a non-root user for security
RUN addgroup --system --gid 1001 nodejs && adduser --system --uid 1001 nextjs

# Copy built assets from the builder stage
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next/ ./.next
COPY --from=builder /app/node_modules ./node_modules

# Set appropriate permissions
RUN chown -R nextjs:nodejs /app

# Use non-root user
USER nextjs

# Expose port 3000
EXPOSE 3000

# Set environment variables
ENV PORT 300
